<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>licensing-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Eagle Eye Licensing Service</name>
    <description>Licensing Service</description>

    <parent>
        <groupId>smia</groupId>
        <artifactId>chapter2</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
    </dependencies>

    <properties>
        <start-class>com.thoughtmechanix.licenses.Application</start-class>
        <docker.image.name>${docker.image.name.prefix}/tmx-licensing-service</docker.image.name>
        <docker.image.tag>chapter2</docker.image.tag>
    </properties>

   <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>${dockerfile-maven-version}</version>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>build</goal>
              <goal>push</goal>
            </goals>
          </execution>
          <execution>
            <id>tag</id>
            <goals>
              <goal>tag</goal>
            </goals>
            <configuration>
              <repository>${docker.image.name}</repository>
              <tag>${docker.image.tag}</tag>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <buildArgs>
            <HTTP_PROXY>${env.HTTP_PROXY}</HTTP_PROXY>
            <http_proxy>${env.HTTP_PROXY}</http_proxy>
            <HTTPS_PROXY>${env.HTTPS_PROXY}</HTTPS_PROXY>
            <https_proxy>${env.HTTPS_PROXY}</https_proxy>
          </buildArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
